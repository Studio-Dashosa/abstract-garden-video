name: Build issues data and commit

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *' # hourly

permissions:
  contents: read

jobs:
  build-and-commit:
    if: ${{ secrets.REPO_WRITE_TOKEN != '' }}
    runs-on: ubuntu-latest
    env:
      REPO: Studio-Dashosa/abstract-garden-video
      ACTOR: github-actions[bot]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate issues data
        env:
          TOKEN: ${{ secrets.REPO_WRITE_TOKEN }}
        run: |
          mkdir -p docs/data
          node -e '
          const https = require("https");
          const fs = require("fs");
          const repo = process.env.REPO;
          const opts = {
            headers: {
              "User-Agent": "actions",
              "Authorization": `Bearer ${process.env.TOKEN}`,
              "Accept": "application/vnd.github+json"
            }
          };
          const url = `https://api.github.com/repos/${repo}/issues?state=all&per_page=100`;
          https.get(url, opts, res => {
            let data = "";
            res.on("data", c => data += c);
            res.on("end", () => {
              if (res.statusCode >= 200 && res.statusCode < 300) {
                fs.writeFileSync("docs/data/issues.json", data);
                console.log("Wrote docs/data/issues.json");
              } else {
                console.error("Failed to fetch issues:", res.statusCode, data);
                process.exit(1);
              }
            });
          }).on("error", err => { console.error(err); process.exit(1); });
          '

      - name: Commit and push
        env:
          TOKEN: ${{ secrets.REPO_WRITE_TOKEN }}
        run: |
          git config user.name "${{ env.ACTOR }}"
          git config user.email "${{ env.ACTOR }}@users.noreply.github.com"
          git add docs/data/issues.json
          if git diff --cached --quiet; then
            echo "No changes to commit"; exit 0; fi
          git commit -m "chore(data): update issues.json [skip ci]"
          git push https://x-access-token:${TOKEN}@github.com/${{ env.REPO }}.git HEAD:main
